<div class="bg-gray-50 min-h-screen">
  <div class="max-w-7xl mx-auto px-4 py-8">

    <div class="flex justify-between items-start mb-8 pb-6 border-b border-gray-200">
      <div class="flex-1 min-w-0">
        <h1 class="text-3xl font-bold text-gray-900 mb-2"><%= @theme.name %></h1>
        <p class="text-lg text-gray-600 leading-relaxed"><%= @theme.description %></p>
      </div>

      <div class="flex flex-col sm:flex-row gap-3 ml-6 flex-shrink-0">
        <%= link_to "Add Page", admin_new_theme_page_path(theme_id: @theme.id),
                    class: "inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-200" %>

        <%= link_to "Edit Theme", edit_admin_theme_path(@theme),
                    class: "inline-flex items-center justify-center px-4 py-2 border border-amber-300 rounded-md shadow-sm text-sm font-medium text-amber-800 bg-amber-100 hover:bg-amber-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition duration-200" %>

        <%= link_to "Back to Themes", admin_themes_path,
                    class: "inline-flex items-center justify-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-200" %>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div class="mb-6">
        <h2 class="text-xl font-semibold text-gray-900 mb-1">Theme Pages</h2>
        <p class="text-sm text-gray-500">Manage the pages associated with this theme. Drag to reorder.</p>
      </div>

      <div class="space-y-6">
        <% if @themePages.any? %>
          <div id="sortable-pages" class="space-y-4">
            <% @themePages.order(:component_order).each do |themePage| %>
              <div class="sortable-item bg-gray-50 rounded-lg border border-gray-200 p-6 hover:shadow-md transition-all duration-200 cursor-move"
                   data-page-id="<%= themePage.id %>">
                <!-- Drag Handle -->
                <div class="flex items-center gap-3 mb-4">
                  <div class="drag-handle flex-shrink-0 cursor-grab active:cursor-grabbing">
                    <svg class="w-5 h-5 text-gray-400 hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16"></path>
                    </svg>
                  </div>
                  <div class="flex-1">
                    <div class="flex items-center gap-3">
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                        <%= themePage.page_type %> - <%= themePage.package %>
                      </span>
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-700">
                        <%= pluralize(themePage.theme_page_components.count, 'component') %>
                      </span>
                    </div>
                  </div>

                  <!-- Action Buttons -->
                  <div class="flex items-center gap-2">
                    <%= link_to "Manage Components", admin_new_theme_page_components_path(theme_id: @theme.id, page_id: themePage.id),
                                class: "inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-200" %>

                    <%= link_to "Preview Page", admin_preview_theme_page_path(theme_id: @theme.id, id: themePage.id),
                                class: "inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-yellow-500 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 transition duration-200" %>


                    <%= button_to "Delete", admin_theme_page_path(themePage, theme_id: @theme.id), method: :delete,
                                  class: "inline-flex items-center px-3 py-2 text-sm font-medium text-red-600 hover:text-red-700 hover:bg-red-50 rounded-md transition duration-200 border border-red-200",
                                  data: { confirm: "Are you sure you want to delete this page?" },
                                  form: { class: "inline" } %>
                  </div>
                </div>

                <!-- Components List -->
                <% if themePage.theme_page_components.any? %>
                  <div class="border-t border-gray-200 pt-4 ml-8">
                    <h4 class="text-sm font-medium text-gray-700 mb-3">Components:</h4>
                    <div class="flex flex-wrap gap-2">
                      <% themePage.theme_page_components.each do |themePageComponent| %>
                        <% themePageComponentName = Component.find(themePageComponent.component_id) %>
                        <span class="inline-flex items-center px-2.5 py-1 rounded-md text-xs font-medium bg-green-100 text-green-800 border border-green-200">
                          <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                          </svg>
                          <%= themePageComponentName.name %>
                        </span>
                      <% end %>
                    </div>
                  </div>
                <% else %>
                  <div class="border-t border-gray-200 pt-4 ml-8">
                    <div class="text-center py-4">
                      <svg class="mx-auto h-8 w-8 text-gray-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                      </svg>
                      <p class="text-sm text-gray-500">No components added yet</p>
                    </div>
                  </div>
                <% end %>
              </div>
            <% end %>
          </div>
        <% else %>
          <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No pages</h3>
            <p class="mt-1 text-sm text-gray-500">Get started by creating a new page for this theme.</p>
            <div class="mt-6">
              <%= link_to "Add Page", admin_new_theme_page_path(theme_id: @theme.id),
                          class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>

  </div>
</div>

<!-- Include SortableJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const sortablePages = document.getElementById('sortable-pages');

        if (sortablePages) {
            new Sortable(sortablePages, {
                animation: 150,
                handle: '.drag-handle',
                ghostClass: 'sortable-ghost',
                chosenClass: 'sortable-chosen',
                dragClass: 'sortable-drag',

                onEnd: function(evt) {
                    // Get all page IDs in their new order
                    const pageIds = Array.from(sortablePages.children).map(item =>
                        item.getAttribute('data-page-id')
                    );

                    // Send AJAX request to update order
                    fetch('<%= admin_theme_pages_reorder_path(theme_id: @theme.id) %>', {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            page_ids: pageIds
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Optional: Show success message
                                showNotification('Page order updated successfully', 'success');
                            } else {
                                // Handle error - revert the order
                                console.error('Failed to update order:', data.error);
                                showNotification('Failed to update page order', 'error');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            showNotification('An error occurred while updating page order', 'error');
                        });
                }
            });
        }

        // Simple notification system
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-4 py-2 rounded-md shadow-lg z-50 transition-all duration-300 ${
                type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
            }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }
    });
</script>

<style>
    .sortable-item {
        transition: transform 0.2s ease;
    }

    .sortable-item:hover {
        transform: translateY(-2px);
    }

    .cursor-grab:active {
        cursor: grabbing !important;
    }

    .sortable-ghost {
        opacity: 0.5;
    }

    .sortable-chosen {
        ring: 2px;
        ring-color: #3b82f6;
        border-radius: 0.5rem;
    }

    .sortable-drag {
        transform: rotate(3deg);
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
</style>